<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all' inline='true' name='federated.1lri6yl14s9x991bobc8y048zu3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Analyse de sentiments' name='textscan.0es00is0eosd5p1gy6q1g0h43f8j'>
            <connection class='textscan' directory='C:/Users/HP/Desktop/TER/TER-2023-2024-Visualisations_de_tweets_controverses/ Dossier Codes/test_sentiment_analysis' filename='all.csv' password='' server='' />
          </named-connection>
          <named-connection caption='hashtags_analysis_sentiments_all' name='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Desktop/TER/TER-2023-2024-Visualisations_de_tweets_controverses/ Dossier Codes/test_sentiment_analysis/hashtags_analysis_sentiments_all.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='Text' ordinal='1' />
            <column datatype='real' name='positive' ordinal='2' />
            <column datatype='real' name='neutral' ordinal='3' />
            <column datatype='real' name='negative' ordinal='4' />
            <column datatype='string' name='Sentiment' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='Text' ordinal='1' />
              <column datatype='real' name='positive' ordinal='2' />
              <column datatype='real' name='neutral' ordinal='3' />
              <column datatype='real' name='negative' ordinal='4' />
              <column datatype='string' name='Sentiment' ordinal='5' />
            </columns>
          </relation>
          <relation name='Permuter' type='pivot'>
            <columns>
              <column datatype='string' name='Noms des champs de la permutation' />
              <column datatype='string' name='Valeurs des champs de la permutation' />
            </columns>
            <tag name='Noms des champs de la permutation'>
              <value name='[Hashtag10]' />
              <value name='[Hashtag11]' />
              <value name='[Hashtag12]' />
              <value name='[Hashtag13]' />
              <value name='[Hashtag14]' />
              <value name='[Hashtag15]' />
              <value name='[Hashtag16]' />
              <value name='[Hashtag17]' />
              <value name='[Hashtag18]' />
              <value name='[Hashtag19]' />
              <value name='[Hashtag1]' />
              <value name='[Hashtag20]' />
              <value name='[Hashtag21]' />
              <value name='[Hashtag22]' />
              <value name='[Hashtag23]' />
              <value name='[Hashtag24]' />
              <value name='[Hashtag25]' />
              <value name='[Hashtag26]' />
              <value name='[Hashtag27]' />
              <value name='[Hashtag28]' />
              <value name='[Hashtag2]' />
              <value name='[Hashtag3]' />
              <value name='[Hashtag4]' />
              <value name='[Hashtag5]' />
              <value name='[Hashtag6]' />
              <value name='[Hashtag7]' />
              <value name='[Hashtag8]' />
              <value name='[Hashtag9]' />
            </tag>
            <groups>
              <group name='Valeurs des champs de la permutation'>
                <field name='[analysis_all_hashtags].[Hashtag10]' />
                <field name='[analysis_all_hashtags].[Hashtag11]' />
                <field name='[analysis_all_hashtags].[Hashtag12]' />
                <field name='[analysis_all_hashtags].[Hashtag13]' />
                <field name='[analysis_all_hashtags].[Hashtag14]' />
                <field name='[analysis_all_hashtags].[Hashtag15]' />
                <field name='[analysis_all_hashtags].[Hashtag16]' />
                <field name='[analysis_all_hashtags].[Hashtag17]' />
                <field name='[analysis_all_hashtags].[Hashtag18]' />
                <field name='[analysis_all_hashtags].[Hashtag19]' />
                <field name='[analysis_all_hashtags].[Hashtag1]' />
                <field name='[analysis_all_hashtags].[Hashtag20]' />
                <field name='[analysis_all_hashtags].[Hashtag21]' />
                <field name='[analysis_all_hashtags].[Hashtag22]' />
                <field name='[analysis_all_hashtags].[Hashtag23]' />
                <field name='[analysis_all_hashtags].[Hashtag24]' />
                <field name='[analysis_all_hashtags].[Hashtag25]' />
                <field name='[analysis_all_hashtags].[Hashtag26]' />
                <field name='[analysis_all_hashtags].[Hashtag27]' />
                <field name='[analysis_all_hashtags].[Hashtag28]' />
                <field name='[analysis_all_hashtags].[Hashtag2]' />
                <field name='[analysis_all_hashtags].[Hashtag3]' />
                <field name='[analysis_all_hashtags].[Hashtag4]' />
                <field name='[analysis_all_hashtags].[Hashtag5]' />
                <field name='[analysis_all_hashtags].[Hashtag6]' />
                <field name='[analysis_all_hashtags].[Hashtag7]' />
                <field name='[analysis_all_hashtags].[Hashtag8]' />
                <field name='[analysis_all_hashtags].[Hashtag9]' />
              </group>
            </groups>
            <relation connection='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh' name='analysis_all_hashtags' table='[analysis_all_hashtags$]' type='table'>
              <columns gridOrigin='A1:AG10001:no:A1:AG10001:0' header='yes' outcome='2'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='Hashtag1' ordinal='1' />
                <column datatype='string' name='Hashtag2' ordinal='2' />
                <column datatype='string' name='Hashtag3' ordinal='3' />
                <column datatype='string' name='Hashtag4' ordinal='4' />
                <column datatype='string' name='Hashtag5' ordinal='5' />
                <column datatype='string' name='Hashtag6' ordinal='6' />
                <column datatype='string' name='Hashtag7' ordinal='7' />
                <column datatype='string' name='Hashtag8' ordinal='8' />
                <column datatype='string' name='Hashtag9' ordinal='9' />
                <column datatype='string' name='Hashtag10' ordinal='10' />
                <column datatype='string' name='Hashtag11' ordinal='11' />
                <column datatype='string' name='Hashtag12' ordinal='12' />
                <column datatype='string' name='Hashtag13' ordinal='13' />
                <column datatype='string' name='Hashtag14' ordinal='14' />
                <column datatype='string' name='Hashtag15' ordinal='15' />
                <column datatype='string' name='Hashtag16' ordinal='16' />
                <column datatype='string' name='Hashtag17' ordinal='17' />
                <column datatype='string' name='Hashtag18' ordinal='18' />
                <column datatype='string' name='Hashtag19' ordinal='19' />
                <column datatype='string' name='Hashtag20' ordinal='20' />
                <column datatype='string' name='Hashtag21' ordinal='21' />
                <column datatype='string' name='Hashtag22' ordinal='22' />
                <column datatype='string' name='Hashtag23' ordinal='23' />
                <column datatype='string' name='Hashtag24' ordinal='24' />
                <column datatype='string' name='Hashtag25' ordinal='25' />
                <column datatype='string' name='Hashtag26' ordinal='26' />
                <column datatype='string' name='Hashtag27' ordinal='27' />
                <column datatype='string' name='Hashtag28' ordinal='28' />
                <column datatype='string' name='positive' ordinal='29' />
                <column datatype='string' name='neutral' ordinal='30' />
                <column datatype='string' name='negative' ordinal='31' />
                <column datatype='string' name='Sentiment' ordinal='32' />
              </columns>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Noms des champs de la permutation]' value='[Permuter].[Noms des champs de la permutation]' />
          <map key='[Sentiment (analysis!all!hashtags)]' value='[analysis_all_hashtags].[Sentiment]' />
          <map key='[Sentiment]' value='[all.csv].[Sentiment]' />
          <map key='[Text]' value='[all.csv].[Text]' />
          <map key='[Valeurs des champs de la permutation]' value='[Permuter].[Valeurs des champs de la permutation]' />
          <map key='[id (analysis!all!hashtags)]' value='[analysis_all_hashtags].[id]' />
          <map key='[id]' value='[all.csv].[id]' />
          <map key='[negative (analysis!all!hashtags)]' value='[analysis_all_hashtags].[negative]' />
          <map key='[negative]' value='[all.csv].[negative]' />
          <map key='[neutral (analysis!all!hashtags)]' value='[analysis_all_hashtags].[neutral]' />
          <map key='[neutral]' value='[all.csv].[neutral]' />
          <map key='[positive (analysis!all!hashtags)]' value='[analysis_all_hashtags].[positive]' />
          <map key='[positive]' value='[all.csv].[positive]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AG10001:no:A1:AG10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Text]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>Text</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neutral]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>neutral</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sentiment]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>130</remote-type>
            <local-name>[positive (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neutral (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>neutral</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>130</remote-type>
            <local-name>[negative (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sentiment (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Noms des champs de la permutation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Noms des champs de la permutation]</local-name>
            <parent-name>[Permuter]</parent-name>
            <remote-alias>Noms des champs de la permutation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Valeurs des champs de la permutation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Valeurs des champs de la permutation]</local-name>
            <parent-name>[Permuter]</parent-name>
            <remote-alias>Valeurs des champs de la permutation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hashtags1' datatype='string' name='[Calculation_1236519603288670210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Text], &apos;#&apos;, 2) + SPLIT([Text], &quot;#&quot;, 3)+ SPLIT([Text], &quot;#&quot;, 4) + SPLIT([Text], &quot;#&quot;, 5) +&#13;&#10; SPLIT([Text], &quot;#&quot;, 6) + SPLIT([Text], &quot;#&quot;, 7) + SPLIT([Text], &quot;#&quot;, 8) + SPLIT([Text], &quot;#&quot;, 9) + SPLIT([Text], &quot;#&quot;, 10)' />
      </column>
      <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
      <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='all.csv' datatype='table' name='[__tableau_internal_object_id__].[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='analysis_all_hashtags' datatype='table' name='[__tableau_internal_object_id__].[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]' role='measure' type='quantitative' />
      <column caption='Id (Analysis!All!Hashtags)' datatype='integer' name='[id (analysis!all!hashtags)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Negative (Analysis!All!Hashtags)' datatype='string' name='[negative (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative' />
      <column caption='Neutral (Analysis!All!Hashtags)' datatype='string' name='[neutral (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative' />
      <column caption='Positive (Analysis!All!Hashtags)' datatype='string' name='[positive (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all.csv_62ED252798C34C949AB32A3D7A7B0BCD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Valeurs des champs de la permutation]' derivation='Attribute' name='[attr:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
      <column-instance column='[negative]' derivation='Sum' name='[sum:negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neutral]' derivation='Sum' name='[sum:neutral:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='500' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Valeurs des champs de la permutation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHILDREN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HYDROCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COVID_19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CANADA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORONAVIRUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIDS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHINA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HYDROXYCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WHO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CANCER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRUMP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COVID19NIGERIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SARSCOV2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZITHROMYCIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COVID-19&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STAYATHOMECHALLENGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COVID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RAOULT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARECALL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HEALTH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VACCINATION&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CORONAVIRUSOUTBREAK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MALARIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CORONAVIRUSPANDEMIC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIGERIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COVID19&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REMDESIVIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVID2019&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHLOROQUINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HTTP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VACCINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COVIDー19&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STAYHOME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CORONAVIRUSUPDATE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PANDEMIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PFIZER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FASTING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[__tableau_internal_object_id__].[cnt:analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:positive:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[__tableau_internal_object_id__].[cnt:all.csv_62ED252798C34C949AB32A3D7A7B0BCD:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:neutral:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:negative:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sentiment:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;pos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;neg&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Valeurs des champs de la permutation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHILDREN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HYDROCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COVID_19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CANADA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORONAVIRUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIDS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHINA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HYDROXYCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WHO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CANCER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRUMP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COVID19NIGERIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SARSCOV2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZITHROMYCIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BREAKING&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COVID-19&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STAYATHOMECHALLENGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COVID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RAOULT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARECALL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HEALTH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VACCINATION&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CORONAVIRUSOUTBREAK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MALARIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CORONAVIRUSPANDEMIC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIGERIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COVID19&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REMDESIVIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVID2019&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHLOROQUINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HTTP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VACCINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COVIDー19&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STAYHOME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CORONAVIRUSUPDATE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PANDEMIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PFIZER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FASTING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all.csv' id='all.csv_62ED252798C34C949AB32A3D7A7B0BCD'>
            <properties context=''>
              <relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='fr_FR'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='Text' ordinal='1' />
                  <column datatype='real' name='positive' ordinal='2' />
                  <column datatype='real' name='neutral' ordinal='3' />
                  <column datatype='real' name='negative' ordinal='4' />
                  <column datatype='string' name='Sentiment' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='analysis_all_hashtags' id='analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5'>
            <properties context=''>
              <relation name='Permuter' type='pivot'>
                <columns>
                  <column datatype='string' name='Noms des champs de la permutation' />
                  <column datatype='string' name='Valeurs des champs de la permutation' />
                </columns>
                <tag name='Noms des champs de la permutation'>
                  <value name='[Hashtag10]' />
                  <value name='[Hashtag11]' />
                  <value name='[Hashtag12]' />
                  <value name='[Hashtag13]' />
                  <value name='[Hashtag14]' />
                  <value name='[Hashtag15]' />
                  <value name='[Hashtag16]' />
                  <value name='[Hashtag17]' />
                  <value name='[Hashtag18]' />
                  <value name='[Hashtag19]' />
                  <value name='[Hashtag1]' />
                  <value name='[Hashtag20]' />
                  <value name='[Hashtag21]' />
                  <value name='[Hashtag22]' />
                  <value name='[Hashtag23]' />
                  <value name='[Hashtag24]' />
                  <value name='[Hashtag25]' />
                  <value name='[Hashtag26]' />
                  <value name='[Hashtag27]' />
                  <value name='[Hashtag28]' />
                  <value name='[Hashtag2]' />
                  <value name='[Hashtag3]' />
                  <value name='[Hashtag4]' />
                  <value name='[Hashtag5]' />
                  <value name='[Hashtag6]' />
                  <value name='[Hashtag7]' />
                  <value name='[Hashtag8]' />
                  <value name='[Hashtag9]' />
                </tag>
                <groups>
                  <group name='Valeurs des champs de la permutation'>
                    <field name='[analysis_all_hashtags].[Hashtag10]' />
                    <field name='[analysis_all_hashtags].[Hashtag11]' />
                    <field name='[analysis_all_hashtags].[Hashtag12]' />
                    <field name='[analysis_all_hashtags].[Hashtag13]' />
                    <field name='[analysis_all_hashtags].[Hashtag14]' />
                    <field name='[analysis_all_hashtags].[Hashtag15]' />
                    <field name='[analysis_all_hashtags].[Hashtag16]' />
                    <field name='[analysis_all_hashtags].[Hashtag17]' />
                    <field name='[analysis_all_hashtags].[Hashtag18]' />
                    <field name='[analysis_all_hashtags].[Hashtag19]' />
                    <field name='[analysis_all_hashtags].[Hashtag1]' />
                    <field name='[analysis_all_hashtags].[Hashtag20]' />
                    <field name='[analysis_all_hashtags].[Hashtag21]' />
                    <field name='[analysis_all_hashtags].[Hashtag22]' />
                    <field name='[analysis_all_hashtags].[Hashtag23]' />
                    <field name='[analysis_all_hashtags].[Hashtag24]' />
                    <field name='[analysis_all_hashtags].[Hashtag25]' />
                    <field name='[analysis_all_hashtags].[Hashtag26]' />
                    <field name='[analysis_all_hashtags].[Hashtag27]' />
                    <field name='[analysis_all_hashtags].[Hashtag28]' />
                    <field name='[analysis_all_hashtags].[Hashtag2]' />
                    <field name='[analysis_all_hashtags].[Hashtag3]' />
                    <field name='[analysis_all_hashtags].[Hashtag4]' />
                    <field name='[analysis_all_hashtags].[Hashtag5]' />
                    <field name='[analysis_all_hashtags].[Hashtag6]' />
                    <field name='[analysis_all_hashtags].[Hashtag7]' />
                    <field name='[analysis_all_hashtags].[Hashtag8]' />
                    <field name='[analysis_all_hashtags].[Hashtag9]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh' name='analysis_all_hashtags' table='[analysis_all_hashtags$]' type='table'>
                  <columns gridOrigin='A1:AG10001:no:A1:AG10001:0' header='yes' outcome='2'>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='Hashtag1' ordinal='1' />
                    <column datatype='string' name='Hashtag2' ordinal='2' />
                    <column datatype='string' name='Hashtag3' ordinal='3' />
                    <column datatype='string' name='Hashtag4' ordinal='4' />
                    <column datatype='string' name='Hashtag5' ordinal='5' />
                    <column datatype='string' name='Hashtag6' ordinal='6' />
                    <column datatype='string' name='Hashtag7' ordinal='7' />
                    <column datatype='string' name='Hashtag8' ordinal='8' />
                    <column datatype='string' name='Hashtag9' ordinal='9' />
                    <column datatype='string' name='Hashtag10' ordinal='10' />
                    <column datatype='string' name='Hashtag11' ordinal='11' />
                    <column datatype='string' name='Hashtag12' ordinal='12' />
                    <column datatype='string' name='Hashtag13' ordinal='13' />
                    <column datatype='string' name='Hashtag14' ordinal='14' />
                    <column datatype='string' name='Hashtag15' ordinal='15' />
                    <column datatype='string' name='Hashtag16' ordinal='16' />
                    <column datatype='string' name='Hashtag17' ordinal='17' />
                    <column datatype='string' name='Hashtag18' ordinal='18' />
                    <column datatype='string' name='Hashtag19' ordinal='19' />
                    <column datatype='string' name='Hashtag20' ordinal='20' />
                    <column datatype='string' name='Hashtag21' ordinal='21' />
                    <column datatype='string' name='Hashtag22' ordinal='22' />
                    <column datatype='string' name='Hashtag23' ordinal='23' />
                    <column datatype='string' name='Hashtag24' ordinal='24' />
                    <column datatype='string' name='Hashtag25' ordinal='25' />
                    <column datatype='string' name='Hashtag26' ordinal='26' />
                    <column datatype='string' name='Hashtag27' ordinal='27' />
                    <column datatype='string' name='Hashtag28' ordinal='28' />
                    <column datatype='string' name='positive' ordinal='29' />
                    <column datatype='string' name='neutral' ordinal='30' />
                    <column datatype='string' name='negative' ordinal='31' />
                    <column datatype='string' name='Sentiment' ordinal='32' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (analysis!all!hashtags)]' />
            </expression>
            <first-end-point object-id='all.csv_62ED252798C34C949AB32A3D7A7B0BCD' />
            <second-end-point object-id='analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Moyenne polarités sentiments'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Moyenne des polarités&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative' />
            <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative' />
            <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[negative]' derivation='Sum' name='[sum:negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neutral]' derivation='Sum' name='[sum:neutral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:negative:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:neutral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[sum:positive:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='276' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lri6yl14s9x991bobc8y048zu3h].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{155C2573-31A7-4F65-B960-D848D8BCDFC8}' />
    </worksheet>
    <worksheet name='Nuage de mots hashtags sentiments'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='Count' name='[cnt:Valeurs des champs de la permutation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Valeurs des champs de la permutation])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Valeurs des champs de la permutation:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='%null%' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/DDCRNPJJYC&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/H2KFBAKVVX&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/HVRUXNKQ19&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/S3XZ0ZVL1V&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/ZKCMATMZIO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;OH&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;()&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;627&apos;&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;ALL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;ALMOST&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;AN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;COULD&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;FOR&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;HW&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;I&apos;D&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;MORE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;MY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;NO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THEY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;WE&apos;LL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;--IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;-IS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;01659&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;038&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;039S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;0701&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&#10;&#10;DEM&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&#10;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1)2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2&#10;&#10;@WHO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/3&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/7&#10;REPEATING&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/N&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;10&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;100&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;10000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;100000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;101&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;103&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;11&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;114&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;12&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;13&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;135000&#10;&#10;CLICK&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;14888&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;15&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;169&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;17&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;170&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;180&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;18S&#10;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1AB&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1AVRIL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1BAGATATIME&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1CORONA&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1MILLIONBOYS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1ST&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1U&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1XBET&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1️⃣&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/2&#10;&#10;IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/9&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;20&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2004-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;21&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;210&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;218&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;220&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;237&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;247&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;25&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;276&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;28&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2CV&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2ND&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2PM&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2⃣&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3-4&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3/&#10;&#10;AUSSIE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3/21/20&#10;SPEED&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;30&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;300&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;32&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;340B&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;350&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;364&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;39&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3979&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;4&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;40&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;45&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;456&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;46&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;47&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5+&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;50&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;500&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;514&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;52&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;54&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;55&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5BAJE5MINUTE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5K&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6129&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;64&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6592&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;66&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;671&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;69&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;7000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;75000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;77&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;78&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;80&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8211&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8217&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;86&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9+11=20&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;90&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;93&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;95&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;96K&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;_______________________&#10;|&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;·&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;—&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;—ICYMI—NEUROPSYCHIATRIC&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘IT&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘IT’S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘LET&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘[&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘“SPECIFICALLY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;’S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“10000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“100000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“‘&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“🇫🇷&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;…&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;…HTTPS//TCO/UEATZESIQ8&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️EMA&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️ON&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️SPREAD&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️‼️2005&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#75a1c7' />
            <format attr='width' value='677' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' />
              <size column='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
              <text column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E2F2D983-523C-4D13-9253-202F8FE77FA3}' />
    </worksheet>
    <worksheet name='Somme sentiment dominant'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Sentiments dominants</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sentiment:nk]' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Sentiment:qk]</rows>
        <cols>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</cols>
      </table>
      <simple-id uuid='{0A49E5A6-0B74-4888-85A6-EFEF1483C264}' />
    </worksheet>
    <worksheet name='TOP 50 des hashtags les plus utilisés'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='Count' name='[cnt:Valeurs des champs de la permutation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Valeurs des champs de la permutation])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Valeurs des champs de la permutation:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;HTTP&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IF&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;SO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHAT&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHO&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' direction='DESC' using='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='61' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' value='180' />
            <format attr='background-color' field='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' value='#ffffff' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='height-header' value='23' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
            <format attr='background-color' data-class='total' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{50B23E9E-E9F2-472F-A3B6-17C3D6A8FE2D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Analys de sentiments'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='20'>Analyse de sentiments et des hashtags</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-width' value='4' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#4e79a7' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6625' id='17' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91375' id='14' type-v2='layout-basic' w='98400' x='800' y='7625'>
              <zone h='91375' id='12' param='horz' type-v2='layout-flow' w='70000' x='800' y='7625'>
                <zone h='91375' id='10' type-v2='layout-basic' w='70000' x='800' y='7625'>
                  <zone h='39862' id='8' name='Somme sentiment dominant' w='70000' x='800' y='59138'>
                    <zone-style>
                      <format attr='border-color' value='#75a1c7' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='4' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51513' id='9' name='Nuage de mots hashtags sentiments' w='70000' x='800' y='7625'>
                    <zone-style>
                      <format attr='border-color' value='#75a1c7' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='4' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='91375' id='13' name='TOP 50 des hashtags les plus utilisés' show-title='false' w='28400' x='70800' y='7625'>
                <zone-style>
                  <format attr='border-color' value='#75a1c7' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='4' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='20'>Analyse de sentiments et des hashtags</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6625' id='17' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51513' id='9' is-fixed='true' name='Nuage de mots hashtags sentiments' w='70000' x='800' y='7625'>
                  <zone-style>
                    <format attr='border-color' value='#75a1c7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91375' id='13' is-fixed='true' name='TOP 50 des hashtags les plus utilisés' show-title='false' w='28400' x='70800' y='7625'>
                  <zone-style>
                    <format attr='border-color' value='#75a1c7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39862' id='8' is-fixed='true' name='Somme sentiment dominant' w='70000' x='800' y='59138'>
                  <zone-style>
                    <format attr='border-color' value='#75a1c7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13F144EF-08A7-4D08-AD6D-8B4891161C14}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Moyenne polarités sentiments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</field>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:negative:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC8C86A6-2DAF-4402-BCCA-97FD9D2CBC52}' />
    </window>
    <window class='worksheet' name='Somme sentiment dominant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F371099-0AE0-441F-A193-1B05AF279206}' />
    </window>
    <window class='worksheet' name='Nuage de mots hashtags sentiments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC221D34-810C-41E3-B488-04E0F5F7C803}' />
    </window>
    <window class='worksheet' name='TOP 50 des hashtags les plus utilisés'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA0D24B7-5140-4C64-A942-B9E2891A646D}' />
    </window>
    <window class='dashboard' maximized='true' name='Analys de sentiments'>
      <viewpoints>
        <viewpoint name='Nuage de mots hashtags sentiments' />
        <viewpoint name='Somme sentiment dominant'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TOP 50 des hashtags les plus utilisés' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{86BC425B-2792-4495-8E53-098E8C292CE9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analys de sentiments' width='192'>
      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
      SFL8/wcNT58jOQOVMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='67' name='Moyenne polarités sentiments' width='144'>
      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
      KZb8NIM0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Nuage de mots hashtags sentiments' width='192'>
      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
      vgH47Gj+Pz1nZU5hPbdgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Somme sentiment dominant' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOP 50 des hashtags les plus utilisés' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
