<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all' inline='true' name='federated.1lri6yl14s9x991bobc8y048zu3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Analyse de sentiments' name='textscan.0es00is0eosd5p1gy6q1g0h43f8j'>
            <connection class='textscan' directory='C:/Users/HP/Desktop/TER/TER-2023-2024-Visualisations_de_tweets_controverses/ Dossier Codes/test_sentiment_analysis' filename='all.csv' password='' server='' />
          </named-connection>
          <named-connection caption='hashtags_analysis_sentiments_all' name='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Desktop/TER/TER-2023-2024-Visualisations_de_tweets_controverses/ Dossier Codes/test_sentiment_analysis/hashtags_analysis_sentiments_all.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='Text' ordinal='1' />
            <column datatype='real' name='positive' ordinal='2' />
            <column datatype='real' name='neutral' ordinal='3' />
            <column datatype='real' name='negative' ordinal='4' />
            <column datatype='string' name='Sentiment' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='fr_FR'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='Text' ordinal='1' />
              <column datatype='real' name='positive' ordinal='2' />
              <column datatype='real' name='neutral' ordinal='3' />
              <column datatype='real' name='negative' ordinal='4' />
              <column datatype='string' name='Sentiment' ordinal='5' />
            </columns>
          </relation>
          <relation name='Permuter' type='pivot'>
            <columns>
              <column datatype='string' name='Noms des champs de la permutation' />
              <column datatype='string' name='Valeurs des champs de la permutation' />
            </columns>
            <tag name='Noms des champs de la permutation'>
              <value name='[Hashtag10]' />
              <value name='[Hashtag11]' />
              <value name='[Hashtag12]' />
              <value name='[Hashtag13]' />
              <value name='[Hashtag14]' />
              <value name='[Hashtag15]' />
              <value name='[Hashtag16]' />
              <value name='[Hashtag17]' />
              <value name='[Hashtag18]' />
              <value name='[Hashtag19]' />
              <value name='[Hashtag1]' />
              <value name='[Hashtag20]' />
              <value name='[Hashtag21]' />
              <value name='[Hashtag22]' />
              <value name='[Hashtag23]' />
              <value name='[Hashtag24]' />
              <value name='[Hashtag25]' />
              <value name='[Hashtag26]' />
              <value name='[Hashtag27]' />
              <value name='[Hashtag28]' />
              <value name='[Hashtag2]' />
              <value name='[Hashtag3]' />
              <value name='[Hashtag4]' />
              <value name='[Hashtag5]' />
              <value name='[Hashtag6]' />
              <value name='[Hashtag7]' />
              <value name='[Hashtag8]' />
              <value name='[Hashtag9]' />
            </tag>
            <groups>
              <group name='Valeurs des champs de la permutation'>
                <field name='[analysis_all_hashtags].[Hashtag10]' />
                <field name='[analysis_all_hashtags].[Hashtag11]' />
                <field name='[analysis_all_hashtags].[Hashtag12]' />
                <field name='[analysis_all_hashtags].[Hashtag13]' />
                <field name='[analysis_all_hashtags].[Hashtag14]' />
                <field name='[analysis_all_hashtags].[Hashtag15]' />
                <field name='[analysis_all_hashtags].[Hashtag16]' />
                <field name='[analysis_all_hashtags].[Hashtag17]' />
                <field name='[analysis_all_hashtags].[Hashtag18]' />
                <field name='[analysis_all_hashtags].[Hashtag19]' />
                <field name='[analysis_all_hashtags].[Hashtag1]' />
                <field name='[analysis_all_hashtags].[Hashtag20]' />
                <field name='[analysis_all_hashtags].[Hashtag21]' />
                <field name='[analysis_all_hashtags].[Hashtag22]' />
                <field name='[analysis_all_hashtags].[Hashtag23]' />
                <field name='[analysis_all_hashtags].[Hashtag24]' />
                <field name='[analysis_all_hashtags].[Hashtag25]' />
                <field name='[analysis_all_hashtags].[Hashtag26]' />
                <field name='[analysis_all_hashtags].[Hashtag27]' />
                <field name='[analysis_all_hashtags].[Hashtag28]' />
                <field name='[analysis_all_hashtags].[Hashtag2]' />
                <field name='[analysis_all_hashtags].[Hashtag3]' />
                <field name='[analysis_all_hashtags].[Hashtag4]' />
                <field name='[analysis_all_hashtags].[Hashtag5]' />
                <field name='[analysis_all_hashtags].[Hashtag6]' />
                <field name='[analysis_all_hashtags].[Hashtag7]' />
                <field name='[analysis_all_hashtags].[Hashtag8]' />
                <field name='[analysis_all_hashtags].[Hashtag9]' />
              </group>
            </groups>
            <relation connection='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh' name='analysis_all_hashtags' table='[analysis_all_hashtags$]' type='table'>
              <columns gridOrigin='A1:AG10001:no:A1:AG10001:0' header='yes' outcome='2'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='Hashtag1' ordinal='1' />
                <column datatype='string' name='Hashtag2' ordinal='2' />
                <column datatype='string' name='Hashtag3' ordinal='3' />
                <column datatype='string' name='Hashtag4' ordinal='4' />
                <column datatype='string' name='Hashtag5' ordinal='5' />
                <column datatype='string' name='Hashtag6' ordinal='6' />
                <column datatype='string' name='Hashtag7' ordinal='7' />
                <column datatype='string' name='Hashtag8' ordinal='8' />
                <column datatype='string' name='Hashtag9' ordinal='9' />
                <column datatype='string' name='Hashtag10' ordinal='10' />
                <column datatype='string' name='Hashtag11' ordinal='11' />
                <column datatype='string' name='Hashtag12' ordinal='12' />
                <column datatype='string' name='Hashtag13' ordinal='13' />
                <column datatype='string' name='Hashtag14' ordinal='14' />
                <column datatype='string' name='Hashtag15' ordinal='15' />
                <column datatype='string' name='Hashtag16' ordinal='16' />
                <column datatype='string' name='Hashtag17' ordinal='17' />
                <column datatype='string' name='Hashtag18' ordinal='18' />
                <column datatype='string' name='Hashtag19' ordinal='19' />
                <column datatype='string' name='Hashtag20' ordinal='20' />
                <column datatype='string' name='Hashtag21' ordinal='21' />
                <column datatype='string' name='Hashtag22' ordinal='22' />
                <column datatype='string' name='Hashtag23' ordinal='23' />
                <column datatype='string' name='Hashtag24' ordinal='24' />
                <column datatype='string' name='Hashtag25' ordinal='25' />
                <column datatype='string' name='Hashtag26' ordinal='26' />
                <column datatype='string' name='Hashtag27' ordinal='27' />
                <column datatype='string' name='Hashtag28' ordinal='28' />
                <column datatype='string' name='positive' ordinal='29' />
                <column datatype='string' name='neutral' ordinal='30' />
                <column datatype='string' name='negative' ordinal='31' />
                <column datatype='string' name='Sentiment' ordinal='32' />
              </columns>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Noms des champs de la permutation]' value='[Permuter].[Noms des champs de la permutation]' />
          <map key='[Sentiment (analysis!all!hashtags)]' value='[analysis_all_hashtags].[Sentiment]' />
          <map key='[Sentiment]' value='[all.csv].[Sentiment]' />
          <map key='[Text]' value='[all.csv].[Text]' />
          <map key='[Valeurs des champs de la permutation]' value='[Permuter].[Valeurs des champs de la permutation]' />
          <map key='[id (analysis!all!hashtags)]' value='[analysis_all_hashtags].[id]' />
          <map key='[id]' value='[all.csv].[id]' />
          <map key='[negative (analysis!all!hashtags)]' value='[analysis_all_hashtags].[negative]' />
          <map key='[negative]' value='[all.csv].[negative]' />
          <map key='[neutral (analysis!all!hashtags)]' value='[analysis_all_hashtags].[neutral]' />
          <map key='[neutral]' value='[all.csv].[neutral]' />
          <map key='[positive (analysis!all!hashtags)]' value='[analysis_all_hashtags].[positive]' />
          <map key='[positive]' value='[all.csv].[positive]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Text]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>Text</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neutral]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>neutral</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sentiment]</local-name>
            <parent-name>[all.csv]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>130</remote-type>
            <local-name>[positive (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neutral (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>neutral</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>130</remote-type>
            <local-name>[negative (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sentiment (analysis!all!hashtags)]</local-name>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[analysis_all_hashtags]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AG10001:no:A1:AG10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Noms des champs de la permutation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Noms des champs de la permutation]</local-name>
            <parent-name>[Permuter]</parent-name>
            <remote-alias>Noms des champs de la permutation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Valeurs des champs de la permutation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Valeurs des champs de la permutation]</local-name>
            <parent-name>[Permuter]</parent-name>
            <remote-alias>Valeurs des champs de la permutation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hashtags1' datatype='string' name='[Calculation_1236519603288670210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Text], &apos;#&apos;, 2) + SPLIT([Text], &quot;#&quot;, 3)+ SPLIT([Text], &quot;#&quot;, 4) + SPLIT([Text], &quot;#&quot;, 5) +&#13;&#10; SPLIT([Text], &quot;#&quot;, 6) + SPLIT([Text], &quot;#&quot;, 7) + SPLIT([Text], &quot;#&quot;, 8) + SPLIT([Text], &quot;#&quot;, 9) + SPLIT([Text], &quot;#&quot;, 10)' />
      </column>
      <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='all.csv' datatype='table' name='[__tableau_internal_object_id__].[all.csv_62ED252798C34C949AB32A3D7A7B0BCD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='analysis_all_hashtags' datatype='table' name='[__tableau_internal_object_id__].[analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5]' role='measure' type='quantitative' />
      <column caption='Id (Analysis!All!Hashtags)' datatype='integer' name='[id (analysis!all!hashtags)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Negative (Analysis!All!Hashtags)' datatype='string' name='[negative (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative' />
      <column caption='Neutral (Analysis!All!Hashtags)' datatype='string' name='[neutral (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative' />
      <column caption='Positive (Analysis!All!Hashtags)' datatype='string' name='[positive (analysis!all!hashtags)]' role='dimension' type='nominal' />
      <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative' />
      <column-instance column='[Valeurs des champs de la permutation]' derivation='Attribute' name='[attr:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='500' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Valeurs des champs de la permutation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHILDREN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HYDROCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COVID_19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CANADA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORONAVIRUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIDS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHINA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HYDROXYCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WHO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CANCER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRUMP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COVID19NIGERIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SARSCOV2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZITHROMYCIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COVID-19&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STAYATHOMECHALLENGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COVID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RAOULT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARECALL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HEALTH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VACCINATION&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CORONAVIRUSOUTBREAK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MALARIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CORONAVIRUSPANDEMIC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIGERIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COVID19&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REMDESIVIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVID2019&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHLOROQUINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HTTP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VACCINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COVIDー19&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STAYHOME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CORONAVIRUSUPDATE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PANDEMIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PFIZER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FASTING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Valeurs des champs de la permutation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHILDREN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HYDROCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COVID_19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CANADA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORONAVIRUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KIDS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHINA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HYDROXYCHLOROQUINE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WHO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CANCER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HCQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRUMP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COVID19NIGERIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SARSCOV2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZITHROMYCIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COVID-19&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STAYATHOMECHALLENGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COVID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RAOULT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARECALL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HEALTH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VACCINATION&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CORONAVIRUSOUTBREAK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MALARIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CORONAVIRUSPANDEMIC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NIGERIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COVID19&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REMDESIVIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVID2019&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHLOROQUINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HTTP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VACCINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COVIDー19&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STAYHOME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CORONAVIRUSUPDATE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PANDEMIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PFIZER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FASTING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all.csv' id='all.csv_62ED252798C34C949AB32A3D7A7B0BCD'>
            <properties context=''>
              <relation connection='textscan.0es00is0eosd5p1gy6q1g0h43f8j' name='all.csv' table='[all#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='fr_FR'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='Text' ordinal='1' />
                  <column datatype='real' name='positive' ordinal='2' />
                  <column datatype='real' name='neutral' ordinal='3' />
                  <column datatype='real' name='negative' ordinal='4' />
                  <column datatype='string' name='Sentiment' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='analysis_all_hashtags' id='analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5'>
            <properties context=''>
              <relation name='Permuter' type='pivot'>
                <columns>
                  <column datatype='string' name='Noms des champs de la permutation' />
                  <column datatype='string' name='Valeurs des champs de la permutation' />
                </columns>
                <tag name='Noms des champs de la permutation'>
                  <value name='[Hashtag10]' />
                  <value name='[Hashtag11]' />
                  <value name='[Hashtag12]' />
                  <value name='[Hashtag13]' />
                  <value name='[Hashtag14]' />
                  <value name='[Hashtag15]' />
                  <value name='[Hashtag16]' />
                  <value name='[Hashtag17]' />
                  <value name='[Hashtag18]' />
                  <value name='[Hashtag19]' />
                  <value name='[Hashtag1]' />
                  <value name='[Hashtag20]' />
                  <value name='[Hashtag21]' />
                  <value name='[Hashtag22]' />
                  <value name='[Hashtag23]' />
                  <value name='[Hashtag24]' />
                  <value name='[Hashtag25]' />
                  <value name='[Hashtag26]' />
                  <value name='[Hashtag27]' />
                  <value name='[Hashtag28]' />
                  <value name='[Hashtag2]' />
                  <value name='[Hashtag3]' />
                  <value name='[Hashtag4]' />
                  <value name='[Hashtag5]' />
                  <value name='[Hashtag6]' />
                  <value name='[Hashtag7]' />
                  <value name='[Hashtag8]' />
                  <value name='[Hashtag9]' />
                </tag>
                <groups>
                  <group name='Valeurs des champs de la permutation'>
                    <field name='[analysis_all_hashtags].[Hashtag10]' />
                    <field name='[analysis_all_hashtags].[Hashtag11]' />
                    <field name='[analysis_all_hashtags].[Hashtag12]' />
                    <field name='[analysis_all_hashtags].[Hashtag13]' />
                    <field name='[analysis_all_hashtags].[Hashtag14]' />
                    <field name='[analysis_all_hashtags].[Hashtag15]' />
                    <field name='[analysis_all_hashtags].[Hashtag16]' />
                    <field name='[analysis_all_hashtags].[Hashtag17]' />
                    <field name='[analysis_all_hashtags].[Hashtag18]' />
                    <field name='[analysis_all_hashtags].[Hashtag19]' />
                    <field name='[analysis_all_hashtags].[Hashtag1]' />
                    <field name='[analysis_all_hashtags].[Hashtag20]' />
                    <field name='[analysis_all_hashtags].[Hashtag21]' />
                    <field name='[analysis_all_hashtags].[Hashtag22]' />
                    <field name='[analysis_all_hashtags].[Hashtag23]' />
                    <field name='[analysis_all_hashtags].[Hashtag24]' />
                    <field name='[analysis_all_hashtags].[Hashtag25]' />
                    <field name='[analysis_all_hashtags].[Hashtag26]' />
                    <field name='[analysis_all_hashtags].[Hashtag27]' />
                    <field name='[analysis_all_hashtags].[Hashtag28]' />
                    <field name='[analysis_all_hashtags].[Hashtag2]' />
                    <field name='[analysis_all_hashtags].[Hashtag3]' />
                    <field name='[analysis_all_hashtags].[Hashtag4]' />
                    <field name='[analysis_all_hashtags].[Hashtag5]' />
                    <field name='[analysis_all_hashtags].[Hashtag6]' />
                    <field name='[analysis_all_hashtags].[Hashtag7]' />
                    <field name='[analysis_all_hashtags].[Hashtag8]' />
                    <field name='[analysis_all_hashtags].[Hashtag9]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1h4ka1k1h43zir14w0t811tdqlvh' name='analysis_all_hashtags' table='[analysis_all_hashtags$]' type='table'>
                  <columns gridOrigin='A1:AG10001:no:A1:AG10001:0' header='yes' outcome='2'>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='Hashtag1' ordinal='1' />
                    <column datatype='string' name='Hashtag2' ordinal='2' />
                    <column datatype='string' name='Hashtag3' ordinal='3' />
                    <column datatype='string' name='Hashtag4' ordinal='4' />
                    <column datatype='string' name='Hashtag5' ordinal='5' />
                    <column datatype='string' name='Hashtag6' ordinal='6' />
                    <column datatype='string' name='Hashtag7' ordinal='7' />
                    <column datatype='string' name='Hashtag8' ordinal='8' />
                    <column datatype='string' name='Hashtag9' ordinal='9' />
                    <column datatype='string' name='Hashtag10' ordinal='10' />
                    <column datatype='string' name='Hashtag11' ordinal='11' />
                    <column datatype='string' name='Hashtag12' ordinal='12' />
                    <column datatype='string' name='Hashtag13' ordinal='13' />
                    <column datatype='string' name='Hashtag14' ordinal='14' />
                    <column datatype='string' name='Hashtag15' ordinal='15' />
                    <column datatype='string' name='Hashtag16' ordinal='16' />
                    <column datatype='string' name='Hashtag17' ordinal='17' />
                    <column datatype='string' name='Hashtag18' ordinal='18' />
                    <column datatype='string' name='Hashtag19' ordinal='19' />
                    <column datatype='string' name='Hashtag20' ordinal='20' />
                    <column datatype='string' name='Hashtag21' ordinal='21' />
                    <column datatype='string' name='Hashtag22' ordinal='22' />
                    <column datatype='string' name='Hashtag23' ordinal='23' />
                    <column datatype='string' name='Hashtag24' ordinal='24' />
                    <column datatype='string' name='Hashtag25' ordinal='25' />
                    <column datatype='string' name='Hashtag26' ordinal='26' />
                    <column datatype='string' name='Hashtag27' ordinal='27' />
                    <column datatype='string' name='Hashtag28' ordinal='28' />
                    <column datatype='string' name='positive' ordinal='29' />
                    <column datatype='string' name='neutral' ordinal='30' />
                    <column datatype='string' name='negative' ordinal='31' />
                    <column datatype='string' name='Sentiment' ordinal='32' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (analysis!all!hashtags)]' />
            </expression>
            <first-end-point object-id='all.csv_62ED252798C34C949AB32A3D7A7B0BCD' />
            <second-end-point object-id='analysis!all!hashtags_ADCCFA6966C54698A761C6231074A9F5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Moyenne polarités sentiments'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Moyenne des polarités&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column-instance column='[negative]' derivation='Avg' name='[avg:negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neutral]' derivation='Avg' name='[avg:neutral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Avg' name='[avg:positive:qk]' pivot='key' type='quantitative' />
            <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative' />
            <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative' />
            <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[avg:negative:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[avg:neutral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lri6yl14s9x991bobc8y048zu3h].[avg:positive:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[:Measure Names]</rows>
        <cols>[federated.1lri6yl14s9x991bobc8y048zu3h].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{155C2573-31A7-4F65-B960-D848D8BCDFC8}' />
    </worksheet>
    <worksheet name='Nuage de mots hashtags sentiments'>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='Count' name='[cnt:Valeurs des champs de la permutation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Valeurs des champs de la permutation])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Valeurs des champs de la permutation:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='%null%' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/DDCRNPJJYC&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/H2KFBAKVVX&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/HVRUXNKQ19&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/S3XZ0ZVL1V&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;HTTPS//TCO/ZKCMATMZIO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&#10;OH&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;()&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;627&apos;&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;ALL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;ALMOST&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;AN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;COULD&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;FOR&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;HW&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;I&apos;D&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;MORE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;MY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;NO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THEY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;&apos;WE&apos;LL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;--IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;-IS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;01659&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;038&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;039S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;0701&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&#10;&#10;DEM&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1&#10;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1)2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2&#10;&#10;@WHO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/2-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/3&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/7&#10;REPEATING&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1/N&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;10&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;100&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;10000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;100000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;101&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;103&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;11&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;114&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;12&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;13&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;135000&#10;&#10;CLICK&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;14888&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;15&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;169&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;17&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;170&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;180&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;18S&#10;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1AB&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1AVRIL&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1BAGATATIME&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1CORONA&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1MILLIONBOYS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1ST&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1U&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1XBET&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;1️⃣&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/2&#10;&#10;IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2/9&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;20&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2004-&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;21&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;210&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;218&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;220&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;237&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;247&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;25&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;276&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;28&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2CV&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2ND&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2PM&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;2⃣&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3)&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3-4&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3/&#10;&#10;AUSSIE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3/21/20&#10;SPEED&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;30&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;300&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;32&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;340B&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;350&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;364&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;39&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;3979&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;4&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;40&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;45&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;456&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;46&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;47&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5+&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;50&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;500&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;514&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;52&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;54&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;55&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5BAJE5MINUTE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;5K&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6129&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;64&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;6592&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;66&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;671&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;69&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;7000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;75000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;77&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;78&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;80&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8211&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;8217&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;86&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9+11=20&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;90&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;9000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;93&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;95&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;96K&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;_______________________&#10;|&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;·&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;—&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;—ICYMI—NEUROPSYCHIATRIC&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘IT&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘IT’S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘LET&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘[&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‘“SPECIFICALLY&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;’S&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“10000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“100000&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“‘&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;“🇫🇷&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;…&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;…HTTPS//TCO/UEATZESIQ8&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️EMA&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️ON&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️SPREAD&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;‼️‼️2005&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#75a1c7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' />
              <size column='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
              <text column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E2F2D983-523C-4D13-9253-202F8FE77FA3}' />
    </worksheet>
    <worksheet name='Somme sentiment dominant'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Sentiments dominants</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sentiment:nk]' />
              <groupfilter function='member' level='[none:Sentiment:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Sentiment:qk]</rows>
        <cols>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</cols>
      </table>
      <simple-id uuid='{0A49E5A6-0B74-4888-85A6-EFEF1483C264}' />
    </worksheet>
    <worksheet name='TOP 50 ET POLARITE'>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column datatype='string' name='[Sentiment (analysis!all!hashtags)]' role='dimension' type='nominal' />
            <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='Count' name='[cnt:Valeurs des champs de la permutation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment (analysis!all!hashtags)]' derivation='None' name='[none:Sentiment (analysis!all!hashtags):nk]' pivot='key' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment (analysis!all!hashtags):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sentiment (analysis!all!hashtags):nk]' />
              <groupfilter function='member' level='[none:Sentiment (analysis!all!hashtags):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Valeurs des champs de la permutation])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Valeurs des champs de la permutation:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;HTTP&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IF&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;SO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHAT&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHO&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</column>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment (analysis!all!hashtags):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment (analysis!all!hashtags):nk]</rows>
        <cols>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</cols>
      </table>
      <simple-id uuid='{39972AC2-5569-4CA1-95EE-5EB4F6F4E644}' />
    </worksheet>
    <worksheet name='TOP 50 des hashtags les plus utilisés'>
      <table>
        <view>
          <datasources>
            <datasource caption='all' name='federated.1lri6yl14s9x991bobc8y048zu3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1lri6yl14s9x991bobc8y048zu3h'>
            <column caption='Hashtags' datatype='string' name='[Valeurs des champs de la permutation]' role='dimension' type='nominal' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='Count' name='[cnt:Valeurs des champs de la permutation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Valeurs des champs de la permutation]' derivation='None' name='[none:Valeurs des champs de la permutation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Valeurs des champs de la permutation])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Valeurs des champs de la permutation:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;A&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;HTTP&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;I&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IF&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;IN&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;SO&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;THIS&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WE&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHAT&quot;' />
                    <groupfilter function='member' level='[none:Valeurs des champs de la permutation:nk]' member='&quot;WHO&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' direction='DESC' using='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
          <slices>
            <column>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lri6yl14s9x991bobc8y048zu3h].[cnt:Valeurs des champs de la permutation:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{50B23E9E-E9F2-472F-A3B6-17C3D6A8FE2D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tableau de bord 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Analyse de Sentiments</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='67' h='9375' id='9' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='88625' id='6' type-v2='layout-basic' w='98400' x='800' y='10375'>
              <zone h='88625' id='3' name='Moyenne polarités sentiments' w='50300' x='48900' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='88625' id='5' name='Somme sentiment dominant' w='48100' x='800' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Analyse de Sentiments</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='67' h='9375' id='9' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88625' id='5' is-fixed='true' name='Somme sentiment dominant' w='48100' x='800' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88625' id='3' is-fixed='true' name='Moyenne polarités sentiments' w='50300' x='48900' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D89F4AD5-07DD-4A95-8B43-6E655B89E007}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Moyenne polarités sentiments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</field>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:negative:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC8C86A6-2DAF-4402-BCCA-97FD9D2CBC52}' />
    </window>
    <window class='worksheet' name='Somme sentiment dominant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F371099-0AE0-441F-A193-1B05AF279206}' />
    </window>
    <window class='worksheet' name='Nuage de mots hashtags sentiments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC221D34-810C-41E3-B488-04E0F5F7C803}' />
    </window>
    <window class='worksheet' maximized='true' name='TOP 50 des hashtags les plus utilisés'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA0D24B7-5140-4C64-A942-B9E2891A646D}' />
    </window>
    <window class='worksheet' name='TOP 50 ET POLARITE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Sentiment (analysis!all!hashtags):nk]</field>
            <field>[federated.1lri6yl14s9x991bobc8y048zu3h].[none:Valeurs des champs de la permutation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F376A01-CF72-4332-939B-23B3DAAF80C1}' />
    </window>
    <window class='dashboard' name='Tableau de bord 1'>
      <viewpoints>
        <viewpoint name='Moyenne polarités sentiments' />
        <viewpoint name='Somme sentiment dominant'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{88AA0E53-C99A-4688-BA09-D70AF29BB3DE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='127' name='Moyenne polarités sentiments' width='192'>
      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
      4FHvtYrd8NA8YClNA+9i8tCgaWYbR5AACDsmiur9IN+lyPSApUwNHB6KTJia2cYRJADCxgMP
      7R2M9c52jRjvaPFo7IV73TSojSbqniKYTUbUmm5Nb+MgEgBho2ZggAdfZxVgf13GUpDF1x4B
      DGzshXs+/gzSZ5JV6yWmJWRl6hnk79P0Ng4iARDVtGET6H/yfVLOmagAKkznSHn/JP0nhNHo
      jAOqQMZFFbNjzSH0Zov1HaaH1rCjOIpxgaqmt3EQKYgRtTzwTrAxg5VvXCT0rQWEV49eOu6d
      YAmAaAYLeTuWcqjXn1kc8WjMQiNDINF0JWc5UTaVOY/Izg9yBBAKJ0cAoWgSAKFoEgChaBIA
      oWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFo
      EgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIAoWgSAKFoEgChaBIA
      oWgSAKFoEgChaP8PPGFCTOfnRx0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Nuage de mots hashtags sentiments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Somme sentiment dominant' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='104' name='TOP 50 ET POLARITE' width='192'>
      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
      cgQBOrY20HAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TOP 50 des hashtags les plus utilisés' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
